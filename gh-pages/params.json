{"name":"Cx","tagline":"C like scripting language. An educational venture with language development.","body":"Cx\r\n==\r\nA typesafe, interepreted, procedurally object oriented language intended to be a subset of C/C++ \r\nsyntax. Cx intended use is aimed towards system administrative tasks, and network programmability.\r\n\r\n### Supported compilers and platforms\r\nPopular compilers which support C++11 are used to build the Cx interpretor.\r\n\r\n* clang++\r\n* g++4.7 or later\r\n* VS 2012 express\r\n\r\nCx language features are restricted to the C++11 standard library and will compile on OSX, Linux, \r\nand Windows. Any features deemed platform specific will be implemented in dynamic libraries which can \r\nbe loaded at runtime.\r\n\r\n### Cx Documentation\r\nAll documentaion will be posted and updated at the link below. More information ,ay be found in \r\nCx/doc\r\n* [Cx-doc](http://aaronhebert.net/cx/cx-doc.html)\r\n\r\n### Status\r\nThis project is for educational purposes only.<br>\r\nSections currently in progress include:\r\n\r\n* types, and type safety\r\n\t+ completed\r\n\t\t+ int : 32bit integer type\r\n        + bool : true/false\r\n\t\t+ float : Basic real type\r\n\t\t+ char : 8bit character type\r\n\t\t+ primitive type array  \r\n    + unsigned char/int, double, long, wchar_t are under development\r\n\r\n* dynamic run time stack\r\n\t+ completed\r\n\t\t+ fully dynamic allocation/deallocation\r\n\t\t+ frame headers occupy a single stack element\r\n\r\n* expressions and operators\r\n\t+ completed\r\n\t\t+ base language operators\r\n\t\t+ recursive expressions\r\n\t\t+ array initilization lists\r\n* standard statements\r\n* documentation and project organization\r\n\r\n### Roadmap\r\n* Object types\r\n* Namespace controlled global scope\r\n* File I/O - revision\r\n* Preprocessing directives\r\n* Just-in-Time compiling\r\n    + debating on custom JIT or existing library\r\n\r\n### Getting involved\r\nFork the repo. All of your changes are to be made on your copy of the repo. Changes to the master repo are done via pull requests followed by code review.<br>\r\nWe would be happy to welcome anyone willing to learn and help build this project. Ad-hoc SCRUM meetings are to be held to\r\ndiscuss various designs and implementations. These discussions are intended to help the group learn and stay on track with\r\nwhats going on in the project. Availability for voice chat is a minimum requirement.<br>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}